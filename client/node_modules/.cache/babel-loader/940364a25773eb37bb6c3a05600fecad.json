{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/karl/vscode/video-game-data/client/src/Components/Games/Games.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Games.css\";\nimport Game from \"../Game/Game\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport RadioButtons from \"../RadioButtons/RadioButtons\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport { useEffect } from \"react\";\n\nfunction Games() {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  const [searchInput, setSearchInput] = React.useState({\n    titleInput: \"\",\n    publisherInput: \"\",\n    radioButtonInput: \"year\",\n    arrowBtn: true,\n    // pointing up if true\n    numOfGames: 20 // pagination number\n\n  });\n  useEffect(() => {\n    fetch( //\"https://video-game-data-api.herokuapp.com/api/video-game-data/data\",\n    \"http://localhost:5000/\", {\n      method: \"GET\"\n    }).then(res => {\n      setData(res);\n      console.log(\"Retrieved data!\");\n    }).catch(error => console.log(error));\n  }, [data]);\n\n  const onTitleInputChange = e => {\n    setSearchInput({ ...searchInput,\n      titleInput: e.target.value.toLowerCase()\n    });\n  };\n\n  const onPublisherInputChange = e => {\n    setSearchInput({ ...searchInput,\n      publisherInput: e.target.value.toLowerCase()\n    });\n  };\n\n  const onRadioButtonClick = selection => {\n    setSearchInput({ ...searchInput,\n      radioButtonInput: selection\n    });\n  };\n\n  const onArrowClick = () => {\n    setSearchInput({ ...searchInput,\n      arrowBtn: !searchInput.arrowBtn\n    });\n  };\n\n  const onLoadMoreBtnClick = () => {\n    setSearchInput({ ...searchInput,\n      numOfGames: searchInput.numOfGames + 20\n    });\n  }; // Takes the records from the dataset as an array and returns\n  // Game components for each\n\n\n  const createGameComponents = gamesArray => {\n    let gamesList = gamesArray.slice(0, searchInput.numOfGames).map(row => {\n      return /*#__PURE__*/_jsxDEV(Game, {\n        gameData: row\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    });\n    console.log(\"finished creating game components\");\n    return gamesList;\n  };\n\n  let resultsCount; // Just want this for load more btn\n\n  const sortGames = gamesArray => {\n    // These variables need to change for ascending/descending ordering\n    const val1 = searchInput.arrowBtn ? -1 : 1;\n    const val2 = searchInput.arrowBtn ? 1 : -1;\n\n    switch (searchInput.radioButtonInput) {\n      case \"year\":\n        resultsCount = gamesArray.length;\n        console.log(\"GAMES ARRAY\" + JSON.stringify(gamesArray));\n        return gamesArray.sort((a, b) => a.YearReleased > b.YearReleased ? val1 : val2);\n\n      case \"sales\":\n        resultsCount = gamesArray.length;\n        return gamesArray.sort((a, b) => a[\"US Sales (millions)\"] > b[\"US Sales (millions)\"] ? val1 : val2);\n\n      case \"review-score\":\n        resultsCount = gamesArray.length;\n        return gamesArray.sort((a, b) => a[\"Review Score\"] > b[\"Review Score\"] ? val1 : val2);\n\n      default:\n        break;\n    }\n  }; // Here we either pass all our game data to createGameComponents()\n  // or filter some out\n\n\n  let gamesList;\n\n  if (!searchInput.titleInput && !searchInput.publisherInput) {\n    gamesList = createGameComponents(sortGames(data));\n  } else {\n    let rowsCopy = [...data]; // dont want to manipulate actual data\n\n    if (searchInput.titleInput) {\n      rowsCopy = rowsCopy.filter(row => row.Title.toLowerCase().includes(searchInput.titleInput.toLowerCase()));\n    }\n\n    if (searchInput.publisherInput) {\n      rowsCopy = rowsCopy.filter(row => row.Publisher.toLowerCase().includes(searchInput.publisherInput.toLowerCase()));\n    }\n\n    gamesList = createGameComponents(sortGames(rowsCopy));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"games\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      placeholder: \"Search by Tile...\",\n      onChange: onTitleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      placeholder: \"Search by Publisher...\",\n      onChange: onPublisherInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioButtons, {\n      onClick: onRadioButtonClick,\n      onArrowClick: onArrowClick,\n      buttonVal: searchInput.radioButtonInput,\n      arrowBtn: searchInput.arrowBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), gamesList, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Showing\", \" \", searchInput.numOfGames > resultsCount ? resultsCount : searchInput.numOfGames, \" \", \"of \", resultsCount, \" results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), resultsCount > 20 ? /*#__PURE__*/_jsxDEV(LoadMoreBtn, {\n      onClick: onLoadMoreBtnClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 28\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Games, \"A1k2onYiyPlBaGFlkoh0qKOYRFc=\");\n\n_c = Games;\nexport default Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/home/karl/vscode/video-game-data/client/src/Components/Games/Games.js"],"names":["React","Game","SearchBar","RadioButtons","LoadMoreBtn","useEffect","Games","data","setData","useState","searchInput","setSearchInput","titleInput","publisherInput","radioButtonInput","arrowBtn","numOfGames","fetch","method","then","res","console","log","catch","error","onTitleInputChange","e","target","value","toLowerCase","onPublisherInputChange","onRadioButtonClick","selection","onArrowClick","onLoadMoreBtnClick","createGameComponents","gamesArray","gamesList","slice","map","row","id","resultsCount","sortGames","val1","val2","length","JSON","stringify","sort","a","b","YearReleased","rowsCopy","filter","Title","includes","Publisher"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Games.css\";\nimport Game from \"../Game/Game\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport RadioButtons from \"../RadioButtons/RadioButtons\";\nimport LoadMoreBtn from \"../LoadMoreBtn/LoadMoreBtn\";\nimport { useEffect } from \"react\";\n\nfunction Games() {\n  const [data, setData] = React.useState([]);\n  const [searchInput, setSearchInput] = React.useState({\n    titleInput: \"\",\n    publisherInput: \"\",\n    radioButtonInput: \"year\",\n    arrowBtn: true, // pointing up if true\n    numOfGames: 20, // pagination number\n  });\n\n  useEffect(() => {\n    fetch(\n      //\"https://video-game-data-api.herokuapp.com/api/video-game-data/data\",\n      \"http://localhost:5000/\",\n      {\n        method: \"GET\",\n      }\n    )\n      .then((res) => {\n        setData(res);\n        console.log(\"Retrieved data!\");\n      })\n      .catch((error) => console.log(error));\n  }, [data]);\n\n  const onTitleInputChange = (e) => {\n    setSearchInput({\n      ...searchInput,\n      titleInput: e.target.value.toLowerCase(),\n    });\n  };\n\n  const onPublisherInputChange = (e) => {\n    setSearchInput({\n      ...searchInput,\n      publisherInput: e.target.value.toLowerCase(),\n    });\n  };\n\n  const onRadioButtonClick = (selection) => {\n    setSearchInput({\n      ...searchInput,\n      radioButtonInput: selection,\n    });\n  };\n\n  const onArrowClick = () => {\n    setSearchInput({ ...searchInput, arrowBtn: !searchInput.arrowBtn });\n  };\n\n  const onLoadMoreBtnClick = () => {\n    setSearchInput({\n      ...searchInput,\n      numOfGames: searchInput.numOfGames + 20,\n    });\n  };\n\n  // Takes the records from the dataset as an array and returns\n  // Game components for each\n  const createGameComponents = (gamesArray) => {\n    let gamesList = gamesArray.slice(0, searchInput.numOfGames).map((row) => {\n      return <Game gameData={row} key={row.id} />;\n    });\n    console.log(\"finished creating game components\");\n    return gamesList;\n  };\n\n  let resultsCount; // Just want this for load more btn\n\n  const sortGames = (gamesArray) => {\n    // These variables need to change for ascending/descending ordering\n    const val1 = searchInput.arrowBtn ? -1 : 1;\n    const val2 = searchInput.arrowBtn ? 1 : -1;\n\n    switch (searchInput.radioButtonInput) {\n      case \"year\":\n        resultsCount = gamesArray.length;\n        console.log(\"GAMES ARRAY\" + JSON.stringify(gamesArray));\n        return gamesArray.sort((a, b) =>\n          a.YearReleased > b.YearReleased ? val1 : val2\n        );\n      case \"sales\":\n        resultsCount = gamesArray.length;\n        return gamesArray.sort((a, b) =>\n          a[\"US Sales (millions)\"] > b[\"US Sales (millions)\"] ? val1 : val2\n        );\n      case \"review-score\":\n        resultsCount = gamesArray.length;\n        return gamesArray.sort((a, b) =>\n          a[\"Review Score\"] > b[\"Review Score\"] ? val1 : val2\n        );\n      default:\n        break;\n    }\n  };\n\n  // Here we either pass all our game data to createGameComponents()\n  // or filter some out\n  let gamesList;\n\n  if (!searchInput.titleInput && !searchInput.publisherInput) {\n    gamesList = createGameComponents(sortGames(data));\n  } else {\n    let rowsCopy = [...data]; // dont want to manipulate actual data\n    if (searchInput.titleInput) {\n      rowsCopy = rowsCopy.filter((row) =>\n        row.Title.toLowerCase().includes(searchInput.titleInput.toLowerCase())\n      );\n    }\n    if (searchInput.publisherInput) {\n      rowsCopy = rowsCopy.filter((row) =>\n        row.Publisher.toLowerCase().includes(\n          searchInput.publisherInput.toLowerCase()\n        )\n      );\n    }\n    gamesList = createGameComponents(sortGames(rowsCopy));\n  }\n\n  return (\n    <div className=\"games\">\n      <SearchBar\n        placeholder=\"Search by Tile...\"\n        onChange={onTitleInputChange}\n      />\n      <SearchBar\n        placeholder=\"Search by Publisher...\"\n        onChange={onPublisherInputChange}\n      />\n      <RadioButtons\n        onClick={onRadioButtonClick}\n        onArrowClick={onArrowClick}\n        buttonVal={searchInput.radioButtonInput}\n        arrowBtn={searchInput.arrowBtn}\n      />\n\n      {gamesList}\n      <p>\n        Showing{\" \"}\n        {searchInput.numOfGames > resultsCount\n          ? resultsCount\n          : searchInput.numOfGames}{\" \"}\n        of {resultsCount} results\n      </p>\n      {resultsCount > 20 ? <LoadMoreBtn onClick={onLoadMoreBtnClick} /> : null}\n    </div>\n  );\n}\nexport default Games;\n"]},"metadata":{},"sourceType":"module"}